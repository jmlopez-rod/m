# AUTOGENERATED FILE - Update packages/python/tests/blueprints/multi-arch/m/m.yaml
#   then run `m blueprints --update-workflow` to update
name: m

on:
  workflow_call:
    inputs:
      m-tag:
        type: string
        description: The unique version to use for all the images
        required: true
      cache-from-pr:
        type: string
        description: The pull request number to attempt to use as cache.
        required: true

permissions: write-all

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  M_TAG: ${{ inputs.m-tag }}
  M_CACHE_FROM_PR: ${{ inputs.cache-from-pr }}

jobs:
  blueprints:
    runs-on: ubuntu-22.04
    outputs:
      image-names: ${{ steps.m-blueprints.outputs.image-names }}
      image-tags: ${{ steps.m-blueprints.outputs.image-tags }}
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: install-m
        run: pip install jmlopez-m
      - name: m-blueprints
        id: m-blueprints
        run: |-
          m blueprints --skip-makefile --skip-workflow packages/python/tests/blueprints/multi-arch/m
          {
            echo "image-names=$(< packages/python/tests/blueprints/multi-arch/m/.m/blueprints/ci/_image-names.json)"
            echo "image-tags=$(< packages/python/tests/blueprints/multi-arch/m/.m/blueprints/ci/_image-tags.json)"
          } >> $GITHUB_OUTPUT
      - name: archive
        uses: actions/upload-artifact@v3
        with:
          name: m-blueprints
          path: packages/python/tests/blueprints/multi-arch/m/.m/blueprints/ci

  build:
    needs: blueprints
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: amd64
            os: ubuntu-amd
          - arch: arm64
            os: ubuntu-arm
    runs-on: ${{ matrix.os }}
    env:
      ARCH: ${{ matrix.arch }}
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: restore-m-blueprints
        uses: actions/download-artifact@v3
        with:
          name: m-blueprints
          path: packages/python/tests/blueprints/multi-arch/m/.m/blueprints/ci
      - name: chmod
        run: chmod +x packages/python/tests/blueprints/multi-arch/m/.m/blueprints/ci/*.sh
      - name: docker-login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: step
        run: cmd
      - name: action
        uses: action/foo@v1
        with:
          param1: val1
          param2: val2
      - name: m-image1 - cache
        run: packages/python/tests/blueprints/multi-arch/m/.m/blueprints/ci/_find-cache.sh m-image1
      - name: m-image1 - build
        run: packages/python/tests/blueprints/multi-arch/m/.m/blueprints/ci/m-image1.build.sh
      - name: m-image1 - push
        run: packages/python/tests/blueprints/multi-arch/m/.m/blueprints/ci/_push-image.sh m-image1
      - name: m-image2 - cache
        run: packages/python/tests/blueprints/multi-arch/m/.m/blueprints/ci/_find-cache.sh m-image2
      - name: m-image2 - build
        run: packages/python/tests/blueprints/multi-arch/m/.m/blueprints/ci/m-image2.build.sh
      - name: m-image2 - push
        run: packages/python/tests/blueprints/multi-arch/m/.m/blueprints/ci/_push-image.sh m-image2

  manifest:
    runs-on: ubuntu-22.04
    needs: [blueprints, build]
    strategy:
      matrix:
        image-name: ${{ fromJSON(needs.blueprints.outputs.image-names) }}
        image-tag: ${{ fromJSON(needs.blueprints.outputs.image-tags) }}
    steps:
      - name: docker-login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: create
        run: |-
          docker manifest create ghcr.io/repo-owner/${{ matrix.image-name }}:${{ matrix.image-tag }} \
            ghcr.io/repo-owner/amd64-${{ matrix.image-name }}:${{ inputs.m-tag }} \
            ghcr.io/repo-owner/arm64-${{ matrix.image-name }}:${{ inputs.m-tag }}
      - name: push
        run: |-
          docker manifest push ghcr.io/repo-owner/${{ matrix.image-name }}:${{ matrix.image-tag }}
