name: M

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  VIRTUAL_ENV: /opt/venv/m
  PYTHONPATH: ./packages/python
  TWINE_USERNAME: __token__
  FORCE_COLOR: 1
  MYPY_FORCE_COLOR: 1
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  setup:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        py-ver: [py310, py311]
    container:
      image: ghcr.io/jmlopez-rod/m-devcontainer-${{ matrix.py-ver }}:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install
        run: |
          python3 -m venv /opt/venv/m
          poetry install

      - name: venv cache
        uses: actions/cache@v3
        with:
          path: /opt/venv/m
          key: venv-${{ matrix.py-ver }}-${{ hashFiles('**/poetry.lock') }}

  tests:
    needs: setup
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        py-ver: [py310, py311]
    container:
      image: ghcr.io/jmlopez-rod/m-devcontainer-${{ matrix.py-ver }}:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: venv cache
        uses: actions/cache@v3
        with:
          path: /opt/venv/m
          key: venv-${{ matrix.py-ver }}-${{ hashFiles('**/poetry.lock') }}

      - name: run tests
        run: ./packages/python/tests/run.sh

  flake8:
    needs: setup
    runs-on: ubuntu-22.04
    container:
      image: ghcr.io/jmlopez-rod/m-devcontainer-py311:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: venv cache
        uses: actions/cache@v3
        with:
          path: /opt/venv/m
          key: venv-py311-${{ hashFiles('**/poetry.lock') }}

      - name: lint src
        run: |
          m ci celt -t flake8 -c @allowed_errors.json < <(flake8 packages/python/m)

      - name: lint tests
        run: |
          m ci celt -t flake8 -c @allowed_errors_tests.json < <(flake8 packages/python/tests --config .flake8-tests)

  mypy:
    needs: setup
    runs-on: ubuntu-22.04
    container:
      image: ghcr.io/jmlopez-rod/m-devcontainer-py311:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: venv cache
        uses: actions/cache@v3
        with:
          path: /opt/venv/m
          key: venv-py311-${{ hashFiles('**/poetry.lock') }}

      - name: src
        run: |
          mypy ./packages/python/m

      - name: tests
        run: |
          mypy ./packages/python/tests

  # build:
  #   runs-on: ubuntu-22.04
  #   permissions: write-all
  #   container:
  #     image: ghcr.io/jmlopez-rod/m-devcontainer-py311:latest
  #     credentials:
  #       username: ${{ github.actor }}
  #       password: ${{ secrets.GITHUB_TOKEN }}
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: PATH setup
  #       run: |
  #         echo "./packages/bash/lib:/opt/venv/m/bin" >> $GITHUB_PATH

  #     - name: Install
  #       run: |
  #         python3 -m venv /opt/venv/m
  #         poetry install
  #         pnpm install

  #     - name: Checks
  #       run: ./m/scripts/checks/ci.sh

  #     - name: Publish
  #       run: ./m/scripts/publish.sh
