name: M
'on':
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  docker-build:
    runs-on: ${{ matrix.os }}
    needs: setup
    strategy:
      matrix:
        include:
          - arch: amd64
            os: Ubuntu-20.04
      fail-fast: false
    env:
      MINE: MINE
      ARCH: ${{ matrix.arch }}
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: restore-m-blueprints
        uses: actions/download-artifact@v3
        with:
          name: m-blueprints
      - name: m-image1 - cache
        run: m/.m/docker-images/ci/m-image1__cache.sh
      - name: m-image1 - build
        run: m/.m/docker-images/ci/m-image1__build.sh
      - name: m-image1 - push
        run: m/.m/docker-images/ci/m-image1__push.sh
      - name: m-image2 - cache
        run: m/.m/docker-images/ci/m-image2__cache.sh
      - name: m-image2 - build
        run: m/.m/docker-images/ci/m-image2__build.sh
      - name: m-image2 - push
        run: m/.m/docker-images/ci/m-image2__push.sh
  setup:
    runs-on: Ubuntu-22.04
    outputs:
      manifests: ${{ steps.manifests.outputs.manifests }}
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: install-m
        run: pip install git+https://github.com/jmlopez-rod/m.git@topic/docker
      - name: blueprints
        run: m ci blueprints
      - name: output-manifests
        id: manifests
        run: |-
          {
            echo "manifests=$(yq -o=json -I=0 m/.m/docker-images/ci/manifests.json)"
          } >> $GITHUB_OUTPUT
      - name: archive
        uses: actions/upload-artifact@v3
        with:
          name: m-blueprints
          path: m/.m
  manifest:
    runs-on: Ubuntu-22.04
    needs:
      - setup
      - docker-build
    strategy:
      matrix:
        manifest: ${{ fromJSON(needs.setup.outputs.manifest) }}
      fail-fast: true
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: restore-m-blueprints
        uses: actions/download-artifact@v3
        with:
          name: m-blueprints
      - name: create-manifest
        run: ./m/.m/docker-images/ci/manifests/${{ matrix.manifest }}.sh
env:
  VIRTUAL_ENV: /opt/venv/m
  PYTHONPATH: ./packages/python
  FORCE_COLOR: 1
  MYPY_FORCE_COLOR: 1
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
