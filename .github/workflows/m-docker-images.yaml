name: M
'on':
  push:
    branches:
    - master
  pull_request:
    branches:
    - master
jobs:
  docker-build:
    runs-on: ${{ matrix.os }}
    needs: setup
    strategy:
      matrix:
        include:
        - arch: amd64
          os: Ubuntu-20.04
      fail_fast: false
    env:
      MINE: MINE
      ARCH: ${{ matrix.arch }}
    steps:
    - name: checkout
      uses: actions/checkout@v4
    - name: restore-m-blueprints
      uses: actions/download-artifact@v3
      with:
        name: m-blueprints
    - name: m-image1 - cache
      run: m/.m/docker-images/ci/m-image1__cache.sh
    - name: m-image1 - build
      run: m/.m/docker-images/ci/m-image1__build.sh
    - name: m-image1 - push
      run: m/.m/docker-images/ci/m-image1__push.sh
    - name: m-image2 - cache
      run: m/.m/docker-images/ci/m-image2__cache.sh
    - name: m-image2 - build
      run: m/.m/docker-images/ci/m-image2__build.sh
    - name: m-image2 - push
      run: m/.m/docker-images/ci/m-image2__push.sh
  setup:
    runs-on: Ubuntu-22.04
    steps:
    - name: checkout
      uses: actions/checkout@v4
    - name: install-m
      run: pip install jmlopez-m
    - name: blueprints
      run: m ci blueprints
    - name: archive
      uses: actions/upload-artifact@v3
      with:
        name: m-blueprints
        path: m/.m
env:
  VIRTUAL_ENV: /opt/venv/m
  PYTHONPATH: ./packages/python
  FORCE_COLOR: 1
  MYPY_FORCE_COLOR: 1
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
